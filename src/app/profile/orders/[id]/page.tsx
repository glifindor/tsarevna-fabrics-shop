"use client";

import { useState, useEffect } from 'react';
import { useSession } from 'next-auth/react';
import { useRouter, useParams } from 'next/navigation';
import Link from 'next/link';
import Image from 'next/image';
import { FiArrowLeft, FiAlertTriangle, FiPackage, FiMapPin, FiUser, FiCalendar, FiCreditCard } from 'react-icons/fi';
import axios from 'axios';

type OrderItem = {
  productId: {
    _id: string;
    name: string;
    images: string[];
    price: number;
  };
  quantity: number;
  price: number;
};

type Order = {
  _id: string;
  orderNumber: string;
  customerName: string;
  phone: string;
  email: string;
  address?: string;
  deliveryMethod: 'pickup' | 'delivery';
  paymentMethod: 'cash' | 'card';
  comment?: string;
  items: OrderItem[];
  totalAmount: number;
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'canceled';
  createdAt: string;
  updatedAt: string;
};

export default function OrderDetails() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const params = useParams();
  const orderId = params.id as string;
  
  const [order, setOrder] = useState<Order | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  
  // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    if (status === 'unauthenticated') {
      router.push('/login');
    }
  }, [status, router]);
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
  useEffect(() => {
    const fetchOrder = async () => {
      if (status !== 'authenticated' || !session?.user?.id || !orderId) return;
      
      try {
        setIsLoading(true);
        setError('');
        
        const response = await axios.get(`/api/orders/${orderId}`);
        
        if (response.data.success) {
          setOrder(response.data.data);
        } else {
          setError('–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
        }
      } catch (err: any) {
        setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞');
      } finally {
        setIsLoading(false);
      }
    };
    
    fetchOrder();
  }, [session, status, orderId]);
  
  // –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
  const orderStatusMap: Record<string, { label: string, color: string }> = {
    'pending': { label: '–û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏', color: 'bg-yellow-100 text-yellow-800 border border-yellow-200' },
    'processing': { label: '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ', color: 'bg-blue-100 text-blue-800 border border-blue-200' },
    'shipped': { label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω', color: 'bg-indigo-100 text-indigo-800 border border-indigo-200' },
    'delivered': { label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω', color: 'bg-green-100 text-green-800 border border-green-200' },
    'canceled': { label: '–û—Ç–º–µ–Ω–µ–Ω', color: 'bg-pink-100 text-pink-800 border border-pink-200' },
  };
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (status === 'unauthenticated') {
    return null;
  }
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  if (status === 'loading' || isLoading) {
    return (
      <div className="container mx-auto px-4 py-16 text-center">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/4 mx-auto mb-8"></div>
          <div className="h-32 bg-gray-200 rounded max-w-4xl mx-auto"></div>
        </div>
      </div>
    );
  }

  if (error || !order) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-16">
          <FiAlertTriangle className="mx-auto text-pink-500 mb-4" size={48} />
          <h1 className="text-2xl font-bold mb-4 text-gray-800">–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
          <p className="text-gray-600 mb-8">{error || '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –∑–∞–∫–∞–∑ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.'}</p>
          <Link 
            href="/profile" 
            className="inline-flex items-center px-6 py-3 rounded-full bg-gradient-to-r from-pink-400 to-pink-500 text-white hover:from-pink-500 hover:to-pink-600 transition"
          >
            <FiArrowLeft className="mr-2" />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–≤–µ—Ä—Ö—É */}
      <div className="relative mb-8">
        <div className="w-full h-1 bg-gradient-to-r from-pink-200 via-pink-300 to-pink-200 mb-1"></div>
        <div className="w-full h-1 bg-gradient-to-r from-pink-200 via-pink-300 to-pink-200"></div>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center mb-10 relative">
        <h1 className="text-4xl font-bold mb-4 text-brand-primary relative inline-block">
          –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
          <span className="absolute -top-6 left-1/2 transform -translate-x-1/2 text-yellow-400 text-2xl">üìã</span>
        </h1>
        <div className="w-32 h-1 bg-gradient-to-r from-transparent via-pink-400 to-transparent mx-auto"></div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="mb-6">
        <Link
          href="/profile"
          className="inline-flex items-center text-pink-500 hover:text-pink-600 hover:underline font-medium"
        >
          <FiArrowLeft className="mr-2" />
          –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
        </Link>
      </div>

      <div className="max-w-4xl mx-auto space-y-8">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
        <div className="bg-white rounded-xl shadow-soft overflow-hidden border border-pink-100 relative">
          <div className="absolute top-0 left-0 right-0 h-2 bg-gradient-to-r from-pink-300 via-pink-400 to-pink-300"></div>
          <div className="p-6 border-b border-pink-100 bg-gradient-to-r from-pink-50 to-white">
            <div className="flex justify-between items-center">
              <h2 className="text-xl font-semibold text-brand-primary">–ó–∞–∫–∞–∑ #{order.orderNumber}</h2>
              <span className={`px-3 py-1 text-sm font-semibold rounded-full ${orderStatusMap[order.status]?.color || 'bg-gray-100 text-gray-800'}`}>
                {orderStatusMap[order.status]?.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}
              </span>
            </div>
          </div>
          
          <div className="p-6 bg-gradient-to-br from-white to-pink-50/30">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-4">
                <div className="flex items-start">
                  <FiCalendar className="mt-1 mr-3 text-pink-500 flex-shrink-0" />
                  <div>
                    <p className="text-sm text-gray-600">–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</p>
                    <p className="font-medium">{new Date(order.createdAt).toLocaleString('ru-RU')}</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <FiUser className="mt-1 mr-3 text-pink-500 flex-shrink-0" />
                  <div>
                    <p className="text-sm text-gray-600">–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</p>
                    <p className="font-medium">{order.customerName}</p>
                    <p className="text-sm text-gray-500">{order.phone}</p>
                    <p className="text-sm text-gray-500">{order.email}</p>
                  </div>
                </div>
              </div>
              
              <div className="space-y-4">
                <div className="flex items-start">
                  <FiPackage className="mt-1 mr-3 text-pink-500 flex-shrink-0" />
                  <div>
                    <p className="text-sm text-gray-600">–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</p>
                    <p className="font-medium">
                      {order.deliveryMethod === 'pickup' ? '–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞' : '–î–æ—Å—Ç–∞–≤–∫–∞'}
                    </p>
                  </div>
                </div>
                
                {order.deliveryMethod === 'delivery' && order.address && (
                  <div className="flex items-start">
                    <FiMapPin className="mt-1 mr-3 text-pink-500 flex-shrink-0" />
                    <div>
                      <p className="text-sm text-gray-600">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</p>
                      <p className="font-medium">{order.address}</p>
                    </div>
                  </div>
                )}
                
                <div className="flex items-start">
                  <FiCreditCard className="mt-1 mr-3 text-pink-500 flex-shrink-0" />
                  <div>
                    <p className="text-sm text-gray-600">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</p>
                    <p className="font-medium">
                      {order.paymentMethod === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏' : '–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π'}
                    </p>
                  </div>
                </div>
              </div>
            </div>
            
            {order.comment && (
              <div className="mt-6 p-4 bg-yellow-50 rounded-xl border border-yellow-200">
                <p className="text-sm text-yellow-800 font-medium mb-1">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É:</p>
                <p className="text-yellow-700">{order.comment}</p>
              </div>
            )}
          </div>
        </div>

        {/* –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ */}
        <div className="bg-white rounded-xl shadow-soft overflow-hidden border border-pink-100 relative">
          <div className="absolute top-0 left-0 right-0 h-2 bg-gradient-to-r from-pink-300 via-pink-400 to-pink-300"></div>
          <div className="p-6 border-b border-pink-100 bg-gradient-to-r from-pink-50 to-white">
            <h2 className="text-xl font-semibold text-brand-primary">–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h2>
          </div>
          
          <div className="p-6">
            <div className="space-y-4">
              {order.items.map((item, index) => (
                <div key={index} className="flex items-center bg-pink-50/50 p-4 rounded-xl border border-pink-100">
                  <div className="w-20 h-20 bg-gray-200 rounded-lg overflow-hidden flex-shrink-0">
                    {item.productId?.images?.[0] ? (
                      <Image 
                        src={item.productId.images[0]} 
                        alt={item.productId.name}
                        width={80}
                        height={80}
                        className="object-cover w-full h-full"
                      />
                    ) : (
                      <div className="w-full h-full flex items-center justify-center text-gray-400 text-xs">
                        –ù–µ—Ç —Ñ–æ—Ç–æ
                      </div>
                    )}
                  </div>
                  
                  <div className="ml-4 flex-1">
                    <h3 className="font-medium text-gray-800">{item.productId?.name || '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω'}</h3>
                    <p className="text-sm text-gray-600">–ê—Ä—Ç–∏–∫—É–ª: {item.productId?._id}</p>
                    <p className="text-sm text-gray-600">
                      {item.quantity} –º √ó {item.price} ‚ÇΩ = {(item.quantity * item.price).toLocaleString()} ‚ÇΩ
                    </p>
                  </div>
                  
                  <div className="text-right">
                    <p className="font-bold text-lg text-gray-800">
                      {(item.quantity * item.price).toLocaleString()} ‚ÇΩ
                    </p>
                  </div>
                </div>
              ))}
            </div>
            
            {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ */}
            <div className="mt-6 pt-6 border-t border-pink-100">
              <div className="flex justify-between items-center text-xl font-bold">
                <span className="text-gray-800">–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
                <span className="text-pink-500">{order.totalAmount.toLocaleString()} ‚ÇΩ</span>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
        <div className="bg-white rounded-xl shadow-soft overflow-hidden border border-pink-100 relative">
          <div className="absolute top-0 left-0 right-0 h-2 bg-gradient-to-r from-pink-300 via-pink-400 to-pink-300"></div>
          <div className="p-6 border-b border-pink-100 bg-gradient-to-r from-pink-50 to-white">
            <h2 className="text-xl font-semibold text-brand-primary">–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞</h2>
          </div>
          
          <div className="p-6">
            <div className="flex items-center justify-center">
              <div className="w-full max-w-2xl">
                <div className="relative">
                  {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ */}
                  <div className="flex justify-between items-center relative">
                    {/* Pending */}
                    <div className="flex flex-col items-center z-10">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold ${
                        ['pending', 'processing', 'shipped', 'delivered'].includes(order.status) 
                          ? 'bg-pink-500 text-white' 
                          : 'bg-gray-300 text-gray-600'
                      }`}>
                        1
                      </div>
                      <p className="text-xs mt-2 text-center">–ü—Ä–∏–Ω—è—Ç</p>
                    </div>
                    
                    {/* Processing */}
                    <div className="flex flex-col items-center z-10">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold ${
                        ['processing', 'shipped', 'delivered'].includes(order.status) 
                          ? 'bg-pink-500 text-white' 
                          : 'bg-gray-300 text-gray-600'
                      }`}>
                        2
                      </div>
                      <p className="text-xs mt-2 text-center">–û–±—Ä–∞–±–æ—Ç–∫–∞</p>
                    </div>
                    
                    {/* Shipped */}
                    <div className="flex flex-col items-center z-10">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold ${
                        ['shipped', 'delivered'].includes(order.status) 
                          ? 'bg-pink-500 text-white' 
                          : 'bg-gray-300 text-gray-600'
                      }`}>
                        3
                      </div>
                      <p className="text-xs mt-2 text-center">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</p>
                    </div>
                    
                    {/* Delivered */}
                    <div className="flex flex-col items-center z-10">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold ${
                        order.status === 'delivered' 
                          ? 'bg-green-500 text-white' 
                          : 'bg-gray-300 text-gray-600'
                      }`}>
                        4
                      </div>
                      <p className="text-xs mt-2 text-center">–î–æ—Å—Ç–∞–≤–ª–µ–Ω</p>
                    </div>
                    
                    {/* Connecting lines */}
                    <div className="absolute top-4 left-0 right-0 h-0.5 bg-gray-300 -z-10"></div>
                    <div className={`absolute top-4 left-0 h-0.5 bg-pink-500 -z-10 transition-all duration-500 ${
                      order.status === 'pending' ? 'w-0' :
                      order.status === 'processing' ? 'w-1/3' :
                      order.status === 'shipped' ? 'w-2/3' :
                      order.status === 'delivered' ? 'w-full' :
                      'w-0'
                    }`}></div>
                  </div>
                </div>
                
                <div className="mt-6 text-center">
                  <p className="text-lg font-medium text-gray-800">
                    –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: <span className="text-pink-500">{orderStatusMap[order.status]?.label}</span>
                  </p>
                  <p className="text-sm text-gray-600 mt-1">
                    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {new Date(order.updatedAt).toLocaleString('ru-RU')}
                  </p>
                </div>
                
                {order.status === 'canceled' && (
                  <div className="mt-4 p-4 bg-red-50 rounded-xl border border-red-200">
                    <p className="text-red-700 text-center font-medium">–ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω</p>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
      
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–Ω–∏–∑—É */}
      <div className="relative mt-10">
        <div className="w-full h-1 bg-gradient-to-r from-pink-200 via-pink-300 to-pink-200 mb-1"></div>
        <div className="w-full h-1 bg-gradient-to-r from-pink-200 via-pink-300 to-pink-200"></div>
      </div>
    </div>
  );
} 